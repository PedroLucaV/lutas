// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Competidor {
  id             Int      @id @default(autoincrement())
  nome           String
  telefone       String
  email          String   @unique
  senha          String
  endereco       String
  cidade         String
  estado         String
  data_nascimento DateTime
  idade          Int
  genero         String
  graduacao      String
  peso           Float
  equipe         String
  equipeImg      String
  professor      String
  responsavel    String?
  cpf            String?
  fotoResp       String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  // Relacionamento com as lutas
  lutas1        Luta[] @relation("LutaCompetidor1")
  lutas2        Luta[] @relation("LutaCompetidor2")
  lutasVencedor Luta[] @relation("LutaVencedor")
}


model Espectador {
  id             String   @id @default(uuid())
  nome           String
  telefone       String
  email          String
  endereco       String
  cidade         String
  estado         String
}

model Luta {
  id             Int          @id @default(autoincrement())
  categoria      String
  fase          Int
  competidor1Id Int? 
  competidor2Id Int?
  vencedorId    Int?

  competidor1   Competidor? @relation("LutaCompetidor1", fields: [competidor1Id], references: [id])
  competidor2   Competidor? @relation("LutaCompetidor2", fields: [competidor2Id], references: [id])
  vencedor      Competidor? @relation("LutaVencedor", fields: [vencedorId], references: [id])

  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}
